#include <stdio.h>
#include<stdlib.h>
struct tree{
    struct tree *left;
    struct tree *right;
    int data;
}*root;

struct tree* newNode(int data)
{
   
    struct tree* node = (struct tree*)malloc(sizeof(struct tree));
 
    node->data = data;
 
    node->left = NULL;
    node->right = NULL;
    return (node);
}
void preorder(struct tree* root)
{
 if (root != NULL) {
        printf("%d \t", root->data);
        preorder(root->left);
        preorder(root->right);
    }
}
void inorder(struct tree* root)
{
    if (root != NULL) {
        inorder(root->left);
        printf("%d \t", root->data);
        inorder(root->right);
    }
}
void postorder(struct tree* root)
{
    if (root != NULL) {
        postorder(root->left);
        postorder(root->right);
        printf("%d \t", root->data);
    }
}

int main()
{
struct tree *root=NULL;
    root=newNode(80);
    root->left = newNode(3);
    root->right = newNode(9);
    root->left->left = newNode(2);
    root->left->right = newNode(10);
    root->right->left = newNode(6);
    root->right->right = newNode(5);
    printf("Preorder:\n");
    preorder(root);
    printf("\nInorder:\n");
    inorder(root);
    printf("\nPostorder:\n");
    postorder(root);
    
    return 0;
}
